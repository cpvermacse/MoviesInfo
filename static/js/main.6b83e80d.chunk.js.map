{"version":3,"sources":["APIKey.js","components/layout/Navbarmovies.js","components/layout/Footer.js","components/layout/Spinner.js","components/home/MovieCard.js","components/home/MoviesContainer.js","actions/searchActions.js","actions/types.js","components/home/SearchForm.js","components/home/Landing.js","components/home/Movies.js","reducers/searchReducers.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","library","add","fab","Navbarmovies","Navbar","color","dark","expand","NavbarBrand","href","Nav","className","NavItem","icon","style","size","Footer","left","bottom","NavbarText","Spinner","class","MovieCard","movie","this","props","Col","md","Card","CardImg","top","width","height","src","Poster","alt","CardBody","CardSubtitle","Title","Year","to","imdbID","Button","Component","MoviesContainer","content","movies","Response","Search","map","index","key","connect","state","setLoading","type","SearchForm","onChanger","e","searchMovie","target","value","onSubmit","preventDefault","fetchMovies","text","Jumbotron","fluid","Container","faSearch","Form","FormGroup","Input","name","id","placeholder","onChange","dispatch","payload","axios","get","then","response","data","catch","err","console","log","Landing","loading","Movies","fetchMovie","match","params","movieInfo","Row","ListGroup","ListGroupItem","Genre","Released","Rated","imdbRating","Director","Writer","Actors","Plot","rel","a","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Movie","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6b83e80d.chunk.js","sourcesContent":["module.exports = {\n  APIKey: \"243f70\",\n};\n","import React from \"react\";\nimport \"./style.css\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { Navbar, NavbarBrand, Nav, NavItem } from \"reactstrap\";\nlibrary.add(fab);\n\nfunction Navbarmovies() {\n  return (\n    <div>\n      <Navbar color=\"dark\" dark expand=\"md\">\n        <NavbarBrand href=\"/\">MoviesSeriesInfo</NavbarBrand>\n        <Nav className=\"ml-auto\">\n          <NavItem>\n            <FontAwesomeIcon\n              icon={[\"fab\", \"imdb\"]}\n              style={{ color: \"yellow\" }}\n              size=\"4x\"\n            />\n          </NavItem>\n          <NavItem>\n            <FontAwesomeIcon\n              icon={[\"fab\", \"react\"]}\n              style={{ color: \"blue\" }}\n              size=\"4x\"\n            />\n          </NavItem>\n        </Nav>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Navbarmovies;\n","import React from \"react\";\nimport \"./style.css\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { Navbar, NavbarText, Nav } from \"reactstrap\";\nlibrary.add(fab);\n\nfunction Footer() {\n  return (\n    <div>\n      <Navbar color=\"dark\" left=\"0\" bottom=\"0\" dark expand=\"md\">\n        <Nav>\n          <NavbarText>Developed by chandra verma</NavbarText>\n        </Nav>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Spinner() {\n  return (\n    <div>\n      <div class=\"loader\">Loading...</div>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Card, CardImg, CardBody, CardSubtitle, Button, Col } from \"reactstrap\";\n\nexport class MovieCard extends Component {\n  render() {\n    const { movie } = this.props;\n    return (\n      <Col md=\"3\">\n        <Card>\n          <CardImg\n            top\n            width=\"100%\"\n            height=\"300\"\n            src={movie.Poster}\n            alt=\"Card image cap\"\n          />\n          <CardBody>\n            <CardSubtitle>\n              {movie.Title}- {movie.Year}\n            </CardSubtitle>\n            <Link to={\"/movie/\" + movie.imdbID}>\n              <Button>More Deatils ></Button>\n            </Link>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default MovieCard;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport MovieCard from \"./MovieCard\";\n\nexport class MoviesContainer extends Component {\n  render() {\n    const { movies } = this.props;\n    let content = \"\";\n    // console.log(\",,,,,\", movies.length);\n    content =\n      movies.Response === \"True\"\n        ? movies.Search.map((movie, index) => (\n            <MovieCard key={index} movie={movie} />\n          ))\n        : null;\n    return <div className=\"row\">{content}</div>;\n  }\n}\nconst mapStateToProps = (state) => ({\n  movies: state.movies.movies,\n});\nexport default connect(mapStateToProps)(MoviesContainer);\n","import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from \"./types\";\nimport axios from \"axios\";\nimport { APIKey } from \"../APIKey\";\nexport const searchMovie = (text) => (dispatch) => {\n  dispatch({\n    type: SEARCH_MOVIE,\n    payload: text,\n  });\n};\n\nexport const fetchMovies = (text) => (dispatch) => {\n  axios\n    .get(`https://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\n    .then((response) =>\n      dispatch({\n        type: FETCH_MOVIES,\n        payload: response.data,\n      })\n    )\n    .catch((err) => console.log(err));\n};\n\nexport const fetchMovie = (id) => (dispatch) => {\n  axios\n    .get(`https://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\n    .then((response) =>\n      dispatch({\n        type: FETCH_MOVIE,\n        payload: response.data,\n      })\n    )\n    .catch((err) => console.log(err));\n};\n\nexport const setLoading = () => {\n  return {\n    type: LOADING,\n  };\n};\n","export const SEARCH_MOVIE = \"SEARCH_MOVIE\";\nexport const FETCH_MOVIES = \"FETCH_MOVIES\";\nexport const FETCH_MOVIE = \"FETCH_MOVIE\";\nexport const LOADING = \"LOADING\";\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { Jumbotron, Container } from \"reactstrap\";\nimport { Button, Form, FormGroup, Input } from \"reactstrap\";\nimport {\n  searchMovie,\n  fetchMovies,\n  setLoading,\n} from \"../../actions/searchActions\";\n\nexport class SearchForm extends Component {\n  onChanger = (e) => {\n    this.props.searchMovie(e.target.value);\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.fetchMovies(this.props.text);\n    this.props.setLoading();\n  };\n  render() {\n    return (\n      <div>\n        <Jumbotron fluid>\n          <Container fluid className=\"text-center\">\n            <h2 className=\"\">\n              {\" \"}\n              <FontAwesomeIcon icon={faSearch} />\n              Search for a movie, TV Series\n            </h2>\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Input\n                  type=\"text\"\n                  name=\"searchText\"\n                  id=\"searchText\"\n                  placeholder=\"type movie name to search\"\n                  onChange={this.onChanger}\n                />\n              </FormGroup>\n\n              <Button>Search</Button>\n            </Form>\n          </Container>\n        </Jumbotron>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  text: state.movies.text,\n});\nexport default connect(mapStateToProps, {\n  searchMovie,\n  fetchMovies,\n  setLoading,\n})(SearchForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport MoviesContainer from \"./MoviesContainer\";\nimport SearchForm from \"./SearchForm\";\n\nexport class Landing extends Component {\n  render() {\n    const { loading } = this.props;\n    return (\n      <div className=\"container\">\n        <SearchForm />\n        {loading ? <Spinner /> : <MoviesContainer />}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  loading: state.movies.loading,\n});\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../layout/Spinner\";\nimport {\n  Container,\n  Row,\n  Col,\n  CardImg,\n  ListGroup,\n  ListGroupItem,\n  Button,\n} from \"reactstrap\";\nimport { fetchMovie, setLoading } from \"../../actions/searchActions\";\nexport class Movies extends Component {\n  componentDidMount() {\n    this.props.fetchMovie(this.props.match.params.id);\n    this.props.setLoading();\n  }\n  render() {\n    const { loading, movie } = this.props;\n\n    let movieInfo = (\n      <Container>\n        <Row>\n          <Col md=\"4\">\n            <CardImg\n              top\n              width=\"100%\"\n              height=\"75%\"\n              src={movie.Poster}\n              alt=\"Card image cap\"\n            />\n          </Col>\n          <Col md=\"8\">\n            <Row>\n              <h3>{movie.Title}</h3>\n            </Row>\n            <ListGroup>\n              <ListGroupItem>\n                <strong>Genre:</strong>\n                {movie.Genre}\n              </ListGroupItem>\n              <ListGroupItem>\n                <strong>Released:</strong>\n                {movie.Released}\n              </ListGroupItem>\n              <ListGroupItem>\n                <strong>Rated:</strong>\n                {movie.Rated}\n              </ListGroupItem>\n              <ListGroupItem>\n                <strong>IMDB Rating:</strong>\n                {movie.imdbRating}\n              </ListGroupItem>\n              <ListGroupItem>\n                <strong>Director:</strong>\n                {movie.Director}\n              </ListGroupItem>\n              <ListGroupItem>\n                <strong>Writer:</strong>\n                {movie.Writer}\n              </ListGroupItem>\n              <ListGroupItem>\n                <strong>Actors:</strong>\n                {movie.Actors}\n              </ListGroupItem>\n            </ListGroup>\n          </Col>\n        </Row>\n        <Row>\n          <h3>About</h3>\n        </Row>\n        <Row>\n          <h5>{movie.Plot}</h5>\n        </Row>\n        <Row>\n          <Col md=\"6\">\n            <a\n              href={\"https://www.imdb.com/title/\" + movie.imdbID}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"btn btn-primary\"\n            >\n              View on IMDB\n            </a>\n          </Col>\n          <Col md=\"6\" a>\n            <Link to=\"/\">\n              <Button>Go Back To Search</Button>\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n    );\n    let content = loading ? <Spinner /> : movieInfo;\n    return <div>{content}</div>;\n  }\n}\nconst mapStateToProps = (state) => ({\n  loading: state.movies.loading,\n  movie: state.movies.movie,\n});\nexport default connect(mapStateToProps, { fetchMovie, setLoading })(Movies);\n","import {\n  SEARCH_MOVIE,\n  FETCH_MOVIES,\n  FETCH_MOVIE,\n  LOADING,\n} from \"../actions/types\";\n\nconst initialState = {\n  text: \" \",\n  movies: [],\n  loading: false,\n  movie: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SEARCH_MOVIE:\n      return {\n        ...state,\n        text: action.payload,\n        loading: false,\n      };\n    case FETCH_MOVIES:\n      return {\n        ...state,\n        movies: action.payload,\n        loading: false,\n      };\n    case FETCH_MOVIE:\n      return {\n        ...state,\n        movie: action.payload,\n        loading: false,\n      };\n    case LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport searchReducer from \"./searchReducers\";\n\nexport default combineReducers({\n  movies: searchReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport rootReducer from \"./reducers\";\nconst middleware = [thunk];\nconst initialState = {};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/layout/Navbarmovies\";\nimport Footer from \"./components/layout/Footer\";\nimport Landing from \"./components/home/Landing\";\nimport Movie from \"./components/home/Movies\";\n\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div>\n          <Navbar />\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/movie/:id\" component={Movie} />\n\n          <Footer />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}